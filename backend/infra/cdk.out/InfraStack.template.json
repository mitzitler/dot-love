{
 "Resources": {
  "users9E3E6EF7": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "KeySchema": [
     {
      "AttributeName": "id",
      "KeyType": "HASH"
     },
     {
      "AttributeName": "ddp",
      "KeyType": "RANGE"
     }
    ],
    "AttributeDefinitions": [
     {
      "AttributeName": "id",
      "AttributeType": "S"
     },
     {
      "AttributeName": "ddp",
      "AttributeType": "N"
     },
     {
      "AttributeName": "username",
      "AttributeType": "S"
     }
    ],
    "BillingMode": "PAY_PER_REQUEST",
    "GlobalSecondaryIndexes": [
     {
      "IndexName": "username-lookup-index",
      "KeySchema": [
       {
        "AttributeName": "username",
        "KeyType": "HASH"
       }
      ],
      "Projection": {
       "ProjectionType": "ALL"
      }
     }
    ],
    "SSESpecification": {
     "SSEEnabled": true
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "InfraStack/users/Resource"
   }
  },
  "transactions8A3A51B2": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "KeySchema": [
     {
      "AttributeName": "id",
      "KeyType": "HASH"
     }
    ],
    "AttributeDefinitions": [
     {
      "AttributeName": "id",
      "AttributeType": "S"
     },
     {
      "AttributeName": "state",
      "AttributeType": "S"
     },
     {
      "AttributeName": "account_id",
      "AttributeType": "S"
     }
    ],
    "BillingMode": "PAY_PER_REQUEST",
    "GlobalSecondaryIndexes": [
     {
      "IndexName": "transaction-state-index",
      "KeySchema": [
       {
        "AttributeName": "state",
        "KeyType": "HASH"
       }
      ],
      "Projection": {
       "ProjectionType": "ALL"
      }
     },
     {
      "IndexName": "transaction-account-index",
      "KeySchema": [
       {
        "AttributeName": "account_id",
        "KeyType": "HASH"
       }
      ],
      "Projection": {
       "ProjectionType": "ALL"
      }
     }
    ],
    "SSESpecification": {
     "SSEEnabled": true
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "InfraStack/transactions/Resource"
   }
  },
  "commoditiesCB81BD25": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "KeySchema": [
     {
      "AttributeName": "product_name",
      "KeyType": "HASH"
     }
    ],
    "AttributeDefinitions": [
     {
      "AttributeName": "product_name",
      "AttributeType": "S"
     },
     {
      "AttributeName": "product_type",
      "AttributeType": "S"
     }
    ],
    "BillingMode": "PAY_PER_REQUEST",
    "GlobalSecondaryIndexes": [
     {
      "IndexName": "commodity-type-index",
      "KeySchema": [
       {
        "AttributeName": "product_type",
        "KeyType": "HASH"
       }
      ],
      "Projection": {
       "ProjectionType": "ALL"
      }
     }
    ],
    "SSESpecification": {
     "SSEEnabled": true
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "InfraStack/commodities/Resource"
   }
  },
  "invalidtokens1B4D10A0": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "KeySchema": [
     {
      "AttributeName": "jti",
      "KeyType": "HASH"
     }
    ],
    "AttributeDefinitions": [
     {
      "AttributeName": "jti",
      "AttributeType": "S"
     }
    ],
    "BillingMode": "PAY_PER_REQUEST",
    "SSESpecification": {
     "SSEEnabled": true
    },
    "TimeToLiveSpecification": {
     "AttributeName": "ttl",
     "Enabled": true
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "InfraStack/invalid_tokens/Resource"
   }
  },
  "cwauthapiA37DC6CD": {
   "Type": "AWS::ApiGatewayV2::Api",
   "Properties": {
    "CorsConfiguration": {
     "AllowHeaders": [
      "*"
     ],
     "AllowMethods": [
      "GET",
      "HEAD",
      "OPTIONS",
      "POST"
     ],
     "AllowOrigins": [
      "*"
     ],
     "MaxAge": 864000
    },
    "Description": "CarWorld API Gateway",
    "Name": "cw-auth-api",
    "ProtocolType": "HTTP"
   },
   "Metadata": {
    "aws:cdk:path": "InfraStack/cw-auth-api/Resource"
   }
  },
  "cwauthapiDefaultStage7A0C87D3": {
   "Type": "AWS::ApiGatewayV2::Stage",
   "Properties": {
    "ApiId": {
     "Ref": "cwauthapiA37DC6CD"
    },
    "StageName": "$default",
    "AutoDeploy": true
   },
   "Metadata": {
    "aws:cdk:path": "InfraStack/cw-auth-api/DefaultStage/Resource"
   }
  },
  "cwauthapiPOSTauthlogincwauthcontroller3EBF1DFD": {
   "Type": "AWS::ApiGatewayV2::Integration",
   "Properties": {
    "ApiId": {
     "Ref": "cwauthapiA37DC6CD"
    },
    "IntegrationType": "AWS_PROXY",
    "IntegrationUri": {
     "Fn::GetAtt": [
      "cwauthregistrationlambdaD32D4C6D",
      "Arn"
     ]
    },
    "PayloadFormatVersion": "2.0"
   },
   "Metadata": {
    "aws:cdk:path": "InfraStack/cw-auth-api/POST--auth--login/cw-auth-controller/Resource"
   }
  },
  "cwauthapiPOSTauthlogincwauthcontrollerPermission35D88B42": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "cwauthregistrationlambdaD32D4C6D",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-1:832303862315:",
       {
        "Ref": "cwauthapiA37DC6CD"
       },
       "/*/*/auth/login"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "InfraStack/cw-auth-api/POST--auth--login/cw-auth-controller-Permission"
   }
  },
  "cwauthapiPOSTauthloginF4AAD3E2": {
   "Type": "AWS::ApiGatewayV2::Route",
   "Properties": {
    "ApiId": {
     "Ref": "cwauthapiA37DC6CD"
    },
    "RouteKey": "POST /auth/login",
    "AuthorizationType": "NONE",
    "Target": {
     "Fn::Join": [
      "",
      [
       "integrations/",
       {
        "Ref": "cwauthapiPOSTauthlogincwauthcontroller3EBF1DFD"
       }
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "InfraStack/cw-auth-api/POST--auth--login/Resource"
   }
  },
  "cwauthapiPOSTauthregistercwauthcontrollerPermission1CA5DBA0": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "cwauthregistrationlambdaD32D4C6D",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-1:832303862315:",
       {
        "Ref": "cwauthapiA37DC6CD"
       },
       "/*/*/auth/register"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "InfraStack/cw-auth-api/POST--auth--register/cw-auth-controller-Permission"
   }
  },
  "cwauthapiPOSTauthregisterC4AE9527": {
   "Type": "AWS::ApiGatewayV2::Route",
   "Properties": {
    "ApiId": {
     "Ref": "cwauthapiA37DC6CD"
    },
    "RouteKey": "POST /auth/register",
    "AuthorizationType": "NONE",
    "Target": {
     "Fn::Join": [
      "",
      [
       "integrations/",
       {
        "Ref": "cwauthapiPOSTauthlogincwauthcontroller3EBF1DFD"
       }
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "InfraStack/cw-auth-api/POST--auth--register/Resource"
   }
  },
  "cwauthapiPOSTauthrefreshcwauthcontrollerPermission7684D223": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "cwauthregistrationlambdaD32D4C6D",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-1:832303862315:",
       {
        "Ref": "cwauthapiA37DC6CD"
       },
       "/*/*/auth/refresh"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "InfraStack/cw-auth-api/POST--auth--refresh/cw-auth-controller-Permission"
   }
  },
  "cwauthapiPOSTauthrefresh2DDFD30D": {
   "Type": "AWS::ApiGatewayV2::Route",
   "Properties": {
    "ApiId": {
     "Ref": "cwauthapiA37DC6CD"
    },
    "RouteKey": "POST /auth/refresh",
    "AuthorizationType": "NONE",
    "Target": {
     "Fn::Join": [
      "",
      [
       "integrations/",
       {
        "Ref": "cwauthapiPOSTauthlogincwauthcontroller3EBF1DFD"
       }
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "InfraStack/cw-auth-api/POST--auth--refresh/Resource"
   }
  },
  "cwauthapiGETauthguestcwauthcontrollerPermission572BCCBB": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "cwauthregistrationlambdaD32D4C6D",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-1:832303862315:",
       {
        "Ref": "cwauthapiA37DC6CD"
       },
       "/*/*/auth/guest"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "InfraStack/cw-auth-api/GET--auth--guest/cw-auth-controller-Permission"
   }
  },
  "cwauthapiGETauthguest9553D424": {
   "Type": "AWS::ApiGatewayV2::Route",
   "Properties": {
    "ApiId": {
     "Ref": "cwauthapiA37DC6CD"
    },
    "RouteKey": "GET /auth/guest",
    "AuthorizationType": "NONE",
    "Target": {
     "Fn::Join": [
      "",
      [
       "integrations/",
       {
        "Ref": "cwauthapiPOSTauthlogincwauthcontroller3EBF1DFD"
       }
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "InfraStack/cw-auth-api/GET--auth--guest/Resource"
   }
  },
  "cwauthapiPOSTcommercesecretcwcommercecontrollerF93E1DFA": {
   "Type": "AWS::ApiGatewayV2::Integration",
   "Properties": {
    "ApiId": {
     "Ref": "cwauthapiA37DC6CD"
    },
    "IntegrationType": "AWS_PROXY",
    "IntegrationUri": {
     "Fn::GetAtt": [
      "cwcommercelambda170EE5C0",
      "Arn"
     ]
    },
    "PayloadFormatVersion": "2.0"
   },
   "Metadata": {
    "aws:cdk:path": "InfraStack/cw-auth-api/POST--commerce--secret/cw-commerce-controller/Resource"
   }
  },
  "cwauthapiPOSTcommercesecretcwcommercecontrollerPermissionDD0B4268": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "cwcommercelambda170EE5C0",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-1:832303862315:",
       {
        "Ref": "cwauthapiA37DC6CD"
       },
       "/*/*/commerce/secret"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "InfraStack/cw-auth-api/POST--commerce--secret/cw-commerce-controller-Permission"
   }
  },
  "cwauthapiPOSTcommercesecretE4C6C335": {
   "Type": "AWS::ApiGatewayV2::Route",
   "Properties": {
    "ApiId": {
     "Ref": "cwauthapiA37DC6CD"
    },
    "RouteKey": "POST /commerce/secret",
    "AuthorizationType": "CUSTOM",
    "AuthorizerId": {
     "Ref": "cwauthapiCWCommerceRequestValidator8546D1C0"
    },
    "Target": {
     "Fn::Join": [
      "",
      [
       "integrations/",
       {
        "Ref": "cwauthapiPOSTcommercesecretcwcommercecontrollerF93E1DFA"
       }
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "InfraStack/cw-auth-api/POST--commerce--secret/Resource"
   }
  },
  "cwauthapiCWCommerceRequestValidator8546D1C0": {
   "Type": "AWS::ApiGatewayV2::Authorizer",
   "Properties": {
    "ApiId": {
     "Ref": "cwauthapiA37DC6CD"
    },
    "AuthorizerType": "REQUEST",
    "Name": "CWCommerceRequestValidator",
    "AuthorizerPayloadFormatVersion": "2.0",
    "AuthorizerResultTtlInSeconds": 300,
    "AuthorizerUri": {
     "Fn::Join": [
      "",
      [
       "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/",
       {
        "Fn::GetAtt": [
         "cwvalidatorlambdaBC385C0C",
         "Arn"
        ]
       },
       "/invocations"
      ]
     ]
    },
    "EnableSimpleResponses": true,
    "IdentitySource": [
     "$request.header.Authorization"
    ]
   },
   "Metadata": {
    "aws:cdk:path": "InfraStack/cw-auth-api/CWCommerceRequestValidator/Resource"
   }
  },
  "cwauthapiInfraStackcwauthapiCWCommerceRequestValidatorF68B3706PermissionCF43BD9D": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "cwvalidatorlambdaBC385C0C",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-1:832303862315:",
       {
        "Ref": "cwauthapiA37DC6CD"
       },
       "/authorizers/",
       {
        "Ref": "cwauthapiCWCommerceRequestValidator8546D1C0"
       }
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "InfraStack/cw-auth-api/InfraStackcwauthapiCWCommerceRequestValidatorF68B3706-Permission"
   }
  },
  "cwauthapiPOSTcommercewebhookcwcommercecontrollerPermissionD7746207": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "cwcommercelambda170EE5C0",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-1:832303862315:",
       {
        "Ref": "cwauthapiA37DC6CD"
       },
       "/*/*/commerce/webhook"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "InfraStack/cw-auth-api/POST--commerce--webhook/cw-commerce-controller-Permission"
   }
  },
  "cwauthapiPOSTcommercewebhook8D7B65E6": {
   "Type": "AWS::ApiGatewayV2::Route",
   "Properties": {
    "ApiId": {
     "Ref": "cwauthapiA37DC6CD"
    },
    "RouteKey": "POST /commerce/webhook",
    "AuthorizationType": "NONE",
    "Target": {
     "Fn::Join": [
      "",
      [
       "integrations/",
       {
        "Ref": "cwauthapiPOSTcommercesecretcwcommercecontrollerF93E1DFA"
       }
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "InfraStack/cw-auth-api/POST--commerce--webhook/Resource"
   }
  },
  "cwauthapiGETcommercecommoditiescwcommercecontrollerPermission5B259970": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "cwcommercelambda170EE5C0",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-1:832303862315:",
       {
        "Ref": "cwauthapiA37DC6CD"
       },
       "/*/*/commerce/commodities"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "InfraStack/cw-auth-api/GET--commerce--commodities/cw-commerce-controller-Permission"
   }
  },
  "cwauthapiGETcommercecommodities4BB3F65C": {
   "Type": "AWS::ApiGatewayV2::Route",
   "Properties": {
    "ApiId": {
     "Ref": "cwauthapiA37DC6CD"
    },
    "RouteKey": "GET /commerce/commodities",
    "AuthorizationType": "NONE",
    "Target": {
     "Fn::Join": [
      "",
      [
       "integrations/",
       {
        "Ref": "cwauthapiPOSTcommercesecretcwcommercecontrollerF93E1DFA"
       }
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "InfraStack/cw-auth-api/GET--commerce--commodities/Resource"
   }
  },
  "cwauthapiGETprofileddprankcwprofilecontrollerABD3BDB8": {
   "Type": "AWS::ApiGatewayV2::Integration",
   "Properties": {
    "ApiId": {
     "Ref": "cwauthapiA37DC6CD"
    },
    "IntegrationType": "AWS_PROXY",
    "IntegrationUri": {
     "Fn::GetAtt": [
      "cwprofilelambda1955AEA8",
      "Arn"
     ]
    },
    "PayloadFormatVersion": "2.0"
   },
   "Metadata": {
    "aws:cdk:path": "InfraStack/cw-auth-api/GET--profile--ddp_rank/cw-profile-controller/Resource"
   }
  },
  "cwauthapiGETprofileddprankcwprofilecontrollerPermission3E3AC494": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "cwprofilelambda1955AEA8",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-1:832303862315:",
       {
        "Ref": "cwauthapiA37DC6CD"
       },
       "/*/*/profile/ddp_rank"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "InfraStack/cw-auth-api/GET--profile--ddp_rank/cw-profile-controller-Permission"
   }
  },
  "cwauthapiGETprofileddprankC425E15D": {
   "Type": "AWS::ApiGatewayV2::Route",
   "Properties": {
    "ApiId": {
     "Ref": "cwauthapiA37DC6CD"
    },
    "RouteKey": "GET /profile/ddp_rank",
    "AuthorizationType": "CUSTOM",
    "AuthorizerId": {
     "Ref": "cwauthapiCWProfileRequestValidator58527C51"
    },
    "Target": {
     "Fn::Join": [
      "",
      [
       "integrations/",
       {
        "Ref": "cwauthapiGETprofileddprankcwprofilecontrollerABD3BDB8"
       }
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "InfraStack/cw-auth-api/GET--profile--ddp_rank/Resource"
   }
  },
  "cwauthapiCWProfileRequestValidator58527C51": {
   "Type": "AWS::ApiGatewayV2::Authorizer",
   "Properties": {
    "ApiId": {
     "Ref": "cwauthapiA37DC6CD"
    },
    "AuthorizerType": "REQUEST",
    "Name": "CWProfileRequestValidator",
    "AuthorizerPayloadFormatVersion": "2.0",
    "AuthorizerResultTtlInSeconds": 300,
    "AuthorizerUri": {
     "Fn::Join": [
      "",
      [
       "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/",
       {
        "Fn::GetAtt": [
         "cwvalidatorlambdaBC385C0C",
         "Arn"
        ]
       },
       "/invocations"
      ]
     ]
    },
    "EnableSimpleResponses": true,
    "IdentitySource": [
     "$request.header.Authorization"
    ]
   },
   "Metadata": {
    "aws:cdk:path": "InfraStack/cw-auth-api/CWProfileRequestValidator/Resource"
   }
  },
  "cwauthapiInfraStackcwauthapiCWProfileRequestValidator998ED426Permission51362E6F": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "cwvalidatorlambdaBC385C0C",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-1:832303862315:",
       {
        "Ref": "cwauthapiA37DC6CD"
       },
       "/authorizers/",
       {
        "Ref": "cwauthapiCWProfileRequestValidator58527C51"
       }
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "InfraStack/cw-auth-api/InfraStackcwauthapiCWProfileRequestValidator998ED426-Permission"
   }
  },
  "cwvalidatorlambdarole0155FA76": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "Description": "Validator Lambda Role",
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "InfraStack/cw-validator-lambda-role/Resource"
   }
  },
  "jwtlambdalayer1B7A3518": {
   "Type": "AWS::Lambda::LayerVersion",
   "Properties": {
    "Content": {
     "S3Bucket": "cdk-hnb659fds-assets-832303862315-us-east-1",
     "S3Key": "e1c9f542fc6d87b7337b1ce9eded0dfc97ca092475aabba589e9677bdf5e297f.zip"
    },
    "CompatibleRuntimes": [
     "python3.7"
    ]
   },
   "Metadata": {
    "aws:cdk:path": "InfraStack/jwt-lambda-layer/Resource",
    "aws:asset:path": "asset.e1c9f542fc6d87b7337b1ce9eded0dfc97ca092475aabba589e9677bdf5e297f",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Content"
   }
  },
  "jwtdependencylambdalayerF2199D8C": {
   "Type": "AWS::Lambda::LayerVersion",
   "Properties": {
    "Content": {
     "S3Bucket": "cdk-hnb659fds-assets-832303862315-us-east-1",
     "S3Key": "cf110f7eb2fb2b25b7b8da27194129f3e9bcd21134ad94f590adfc1f0c062130.zip"
    },
    "CompatibleRuntimes": [
     "python3.7"
    ]
   },
   "Metadata": {
    "aws:cdk:path": "InfraStack/jwt-dependency-lambda-layer/Resource",
    "aws:asset:path": "asset.cf110f7eb2fb2b25b7b8da27194129f3e9bcd21134ad94f590adfc1f0c062130",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Content"
   }
  },
  "cwvalidatorlambdaBC385C0C": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-832303862315-us-east-1",
     "S3Key": "5fd3dc9881971edb2d0d78deaeec09ba4f0b9f9579cb4d215066847cbf1a79b3.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "cwvalidatorlambdarole0155FA76",
      "Arn"
     ]
    },
    "Description": "CarWorld Validator Lambda, to authenticate API requests",
    "Environment": {
     "Variables": {
      "jwtSecret": "d9d229cbefa9cd74ce15329abdc3825f624eecbfc67a5553673dde15d010fffe",
      "jwtExpMinutes": "1440"
     }
    },
    "Handler": "index.handler",
    "Layers": [
     {
      "Ref": "jwtdependencylambdalayerF2199D8C"
     },
     {
      "Ref": "jwtlambdalayer1B7A3518"
     }
    ],
    "Runtime": "python3.7",
    "Timeout": 15
   },
   "DependsOn": [
    "cwvalidatorlambdarole0155FA76"
   ],
   "Metadata": {
    "aws:cdk:path": "InfraStack/cw-validator-lambda/Resource",
    "aws:asset:path": "asset.5fd3dc9881971edb2d0d78deaeec09ba4f0b9f9579cb4d215066847cbf1a79b3",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "cwauthlambdarole11848D11": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "Description": "Lambda Role with access to Auth table",
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "InfraStack/cw-auth-lambda-role/Resource"
   }
  },
  "cwauthlambdaroleDefaultPolicyF6DAFCD1": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:Scan"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "invalidtokens1B4D10A0",
          "Arn"
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      },
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "users9E3E6EF7",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "users9E3E6EF7",
             "Arn"
            ]
           },
           "/index/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "cwauthlambdaroleDefaultPolicyF6DAFCD1",
    "Roles": [
     {
      "Ref": "cwauthlambdarole11848D11"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "InfraStack/cw-auth-lambda-role/DefaultPolicy/Resource"
   }
  },
  "cwauthregistrationlambdaD32D4C6D": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-832303862315-us-east-1",
     "S3Key": "29cd73d921b48ca690b9c78ee7cf1198e6b76b70b3c18f44ffe32a13ac379d88.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "cwauthlambdarole11848D11",
      "Arn"
     ]
    },
    "Description": "CarWorld AuthController",
    "Environment": {
     "Variables": {
      "jwtSecret": "d9d229cbefa9cd74ce15329abdc3825f624eecbfc67a5553673dde15d010fffe",
      "jwtExpMinutes": "1440",
      "userTableName": {
       "Ref": "users9E3E6EF7"
      },
      "invalidTokenTableName": {
       "Ref": "invalidtokens1B4D10A0"
      }
     }
    },
    "Handler": "function/index.handler",
    "Runtime": "nodejs18.x",
    "Timeout": 15
   },
   "DependsOn": [
    "cwauthlambdaroleDefaultPolicyF6DAFCD1",
    "cwauthlambdarole11848D11"
   ],
   "Metadata": {
    "aws:cdk:path": "InfraStack/cw-auth-registration-lambda/Resource",
    "aws:asset:path": "asset.29cd73d921b48ca690b9c78ee7cf1198e6b76b70b3c18f44ffe32a13ac379d88",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "cwcommercelambdaroleC86545E6": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "Description": "Commerce Lambda Role",
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "InfraStack/cw-commerce-lambda-role/Resource"
   }
  },
  "cwcommercelambdaroleDefaultPolicy510A6733": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "commoditiesCB81BD25",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "transactions8A3A51B2",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "users9E3E6EF7",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "commoditiesCB81BD25",
             "Arn"
            ]
           },
           "/index/*"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "transactions8A3A51B2",
             "Arn"
            ]
           },
           "/index/*"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "users9E3E6EF7",
             "Arn"
            ]
           },
           "/index/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "cwcommercelambdaroleDefaultPolicy510A6733",
    "Roles": [
     {
      "Ref": "cwcommercelambdaroleC86545E6"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "InfraStack/cw-commerce-lambda-role/DefaultPolicy/Resource"
   }
  },
  "lambdalayerAEB0E7A7": {
   "Type": "AWS::Lambda::LayerVersion",
   "Properties": {
    "Content": {
     "S3Bucket": "cdk-hnb659fds-assets-832303862315-us-east-1",
     "S3Key": "1cc3cb9afe3e86481060b3b17b3ae6541b3af414e0ff55814b190017dd0d58ee.zip"
    },
    "CompatibleRuntimes": [
     "python3.7"
    ]
   },
   "Metadata": {
    "aws:cdk:path": "InfraStack/lambda-layer/Resource",
    "aws:asset:path": "asset.1cc3cb9afe3e86481060b3b17b3ae6541b3af414e0ff55814b190017dd0d58ee",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Content"
   }
  },
  "cwcommercelambda170EE5C0": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-832303862315-us-east-1",
     "S3Key": "8f40b4d21b272628cba164e7acb8276d95bcb4c33223e8f375f1e05f97c2bab4.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "cwcommercelambdaroleC86545E6",
      "Arn"
     ]
    },
    "Description": "CarWorld Commerce Lambda, to handle purchases",
    "Environment": {
     "Variables": {
      "stripe_secret": "sk_test_51MVNG0Edd7yLru5yAwryAPzyLfbAoKql1yclFiHiidc7iK9NEla8P9WtNhrtdN8minXow0XGQpeNlBBL8JF1NBsK00QzQj6bdw",
      "user_table_name": {
       "Ref": "users9E3E6EF7"
      },
      "commodity_table_name": {
       "Ref": "commoditiesCB81BD25"
      },
      "transaction_table_name": {
       "Ref": "transactions8A3A51B2"
      },
      "ses_config_id": {
       "Ref": "cwcommercesesconfigurationsetF9E14259"
      }
     }
    },
    "Handler": "index.handler",
    "Layers": [
     {
      "Ref": "lambdalayerAEB0E7A7"
     }
    ],
    "Runtime": "python3.7",
    "Timeout": 15
   },
   "DependsOn": [
    "cwcommercelambdaroleDefaultPolicy510A6733",
    "cwcommercelambdaroleC86545E6"
   ],
   "Metadata": {
    "aws:cdk:path": "InfraStack/cw-commerce-lambda/Resource",
    "aws:asset:path": "asset.8f40b4d21b272628cba164e7acb8276d95bcb4c33223e8f375f1e05f97c2bab4",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "cwprofilelambdarole4CB7C3E5": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "Description": "Profile Lambda Role",
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "InfraStack/cw-profile-lambda-role/Resource"
   }
  },
  "cwprofilelambdaroleDefaultPolicyD28A0990": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "users9E3E6EF7",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "users9E3E6EF7",
             "Arn"
            ]
           },
           "/index/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "cwprofilelambdaroleDefaultPolicyD28A0990",
    "Roles": [
     {
      "Ref": "cwprofilelambdarole4CB7C3E5"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "InfraStack/cw-profile-lambda-role/DefaultPolicy/Resource"
   }
  },
  "cwprofilelambda1955AEA8": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-832303862315-us-east-1",
     "S3Key": "2be2a1f6f2937fe493eee84ae9e3fe97b4f30a616314c408fc69ef79ee199296.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "cwprofilelambdarole4CB7C3E5",
      "Arn"
     ]
    },
    "Description": "CarWorld Profile Lambda, to handle Profile-related actions",
    "Environment": {
     "Variables": {
      "userTableName": {
       "Ref": "users9E3E6EF7"
      }
     }
    },
    "Handler": "index.handler",
    "Runtime": "python3.7",
    "Timeout": 15
   },
   "DependsOn": [
    "cwprofilelambdaroleDefaultPolicyD28A0990",
    "cwprofilelambdarole4CB7C3E5"
   ],
   "Metadata": {
    "aws:cdk:path": "InfraStack/cw-profile-lambda/Resource",
    "aws:asset:path": "asset.2be2a1f6f2937fe493eee84ae9e3fe97b4f30a616314c408fc69ef79ee199296",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "cwcommercesesconfigurationsetF9E14259": {
   "Type": "AWS::SES::ConfigurationSet",
   "Metadata": {
    "aws:cdk:path": "InfraStack/cw-commerce-ses-configuration-set/Resource"
   }
  },
  "sespolicy3AD7855E": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "ses:SendBulkTemplatedEmail",
        "ses:SendEmail",
        "ses:SendRawEmail",
        "ses:SendTemplatedEmail"
       ],
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "sespolicy3AD7855E",
    "Roles": [
     {
      "Ref": "cwcommercelambdaroleC86545E6"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "InfraStack/ses-policy/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/11Qy07DMBD8lt4d9wWcaZEQSByqFHGttsk2XZLYkdemCpH/HdtJReE0D8/a61nJh3s5LGZw4awo66yhoxz2FopaBOswlL2CVpfBfIdjg+LppBLxAjqqwOIF+q+VHIK/6Sgeh+Eq5V6VxcqAJa2izLWzyd84e9aGvtF40UB7LCGN79C0xBzTb9Cj+UDD0+gf/exUcb3zyr0gaOWQ63HDhDvdUNFHOTIveH0AZrQsNxGClltX1Gi3wCgYOeyh1YkqN269D5kw/t/zXuTI2pkCRboo/phUlV6eDrxYZNB0Z5CL2ePU7TzibWtTYnixtovlRRzbi2zsK7LbIlP2t0Avdn0Qar6Wy6W8m30yUWacstSizEf8AWa/yfTjAQAA"
   },
   "Metadata": {
    "aws:cdk:path": "InfraStack/CDKMetadata/Default"
   }
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}